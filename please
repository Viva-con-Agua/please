#!/bin/bash

print_help_please(){
    echo "Commands: "
    echo "  service        # install deployment scripts."
    echo "  network        # handles docker network." 
    echo "  help           # print this page."
}


if ! printenv |  grep -q please_current_update ; then
    echo $PLEASE_CURRENT_UPDATED
    git remote update > trash
    UPSTREAM='@{u}'
    LOCAL=$(git rev-parse @)
    REMOTE=$(git rev-parse "$UPSTREAM")
    BASE=$(git merge-base @ "$UPSTREAM")

    if [ $LOCAL = $REMOTE ]; then
        echo "Up-to-date"
    elif [ $LOCAL = $BASE ]; then
        echo "Need to pull"
        while true; do
            read -e -i "Y" -p "Do you want to update please? [Y/n]: " yn
            case $yn in
                [Nn]* ) break;;
                [Yy]* ) git pull; break;;
                * ) echo "Please answer y or n.";;
            esac
        done
    fi
fi
export PLEASE_CURRENT_UPDATED='true'


case $1 in
    service) 
        source ${PWD}/src/service && service_handler "${@:2}";;
    network) 
        source ${PWD}/src/network && network_handler "${@:2}";;
    install) 
        ./src/install.sh "${@:2}";;
    link)
         ./src/link.sh "${@:2}";;
    update)
        source ${PWD}/src/update && update_handler "${@:2}";;
    help) 
        print_help_please;;
    *) 
        print_help_please
esac

