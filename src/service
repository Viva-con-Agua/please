#!/bin/bash

source ${PWD}/config/helper
source .env

load_config(){
    cfg.parser './config/services.ini' && 
        if [ "$(type -t cfg.section.${1})" = 'function' ]; then
            cfg.section.${1}
        else
            echo service not found ${1}
            exit 1
        fi
}

install_service() {
    cfg.parser './config/services.ini' && cfg.section.${1} &&
    cfg_path=${PWD}/config
    cd $repos_dir &&
    if ! [ -d $repo_name ] ; then
        git clone $repo
    fi
    cd $repo_name
    echo deploy_mode=${deploy_mode} > .env
 #   IFS=', ' read -r -a array <<< "$networks"
 #   for var in ${array[*]}
 #   do
 #       net="${1}_ip"
 #       if ! grep -q $net .env ; then
 #           echo ${!net}
 #           echo ${net}
 #           echo ${net}=${!net} >> .env
 #       fi
 #   done
    ./please install $cfg_path $work_dir
}

up_service(){
    cfg.parser './config/services.ini' && cfg.section.${1} &&
    cd $repos_dir/$repo_name &&
    ./please up $1
}

link_service(){
    cfg.parser './config/services.ini' && cfg.section.${2} &&
    croute=$route 
    temp="${1}_net_ip"
    link=${!temp}
    cfg.section.${1} &&
    cd $repos_dir/$repo_name &&
    ./please link $croute $link
}



test_service(){
    cfg.parser './config/services.ini'
    echo $(cfg.section.${1})
    output=$(awk -F ' *= *' '{ if ($1 ~ /^\[/) printf "\n" $1; else if ($1 !~ /^$/) printf $1 "="  $2  }' config/network.ini | grep "\[domain\]")
    echo $output
    IFS=', ' read -r -a section <<< "$output"
    for var in ${section[*]}
    do
        echo $var
    done

    
}

print_help_install() {
    echo "only provide services: "
    echo "domain"
}

service_handler() {
    case $1 in
        install) 
            install_service $2;;
        up)
            up_service $2;;
        test)
            test_service $2;;
        link)
            link_service $2 $3;;
        *) 
            print_help_install
    esac
}
